*kronos.txt* - A simple task and time manager.

           _/    _/  _/_/_/      _/_/    _/      _/    _/_/      _/_/_/   
          _/  _/    _/    _/  _/    _/  _/_/    _/  _/    _/  _/          
         _/_/      _/_/_/    _/    _/  _/  _/  _/  _/    _/    _/_/       
        _/  _/    _/    _/  _/    _/  _/    _/_/  _/    _/        _/      
       _/    _/  _/    _/    _/_/    _/      _/    _/_/    _/_/_/         
                                                                   
==============================================================================
TABLE OF CONTENTS                                            *kronos-contents*

  Requirements ......................................... |kronos-requirements|
  Usage ....................................................... |kronos-usage|
   - Create .................................................  |kronos-create|
   - Read ...................................................... |kronos-read|
   - Update .................................................. |kronos-update|
   - Start/stop .........................................  |kronos-start-stop|
   - Hide done tasks ................................ |kronos-hide-done-tasks|
   - Context ................................................ |kronos-context|
   - Sort ...................................................... |kronos-sort|
   - Worktime .............................................. |kronos-worktime|
   - Delete .................................................. |kronos-delete|
  Backend ..................................................  |kronos-backend|
  Import ....................................................  |kronos-import|
  Mappings ................................................  |kronos-mappings|
  License ................................................... |kronos-license|
  Contributing ......................................... |kronos-contributing|
  Changelog ............................................... |kronos-changelog|
  Credits ................................................... |kronos-credits|

==============================================================================
REQUIREMENTS                                             *kronos-requirements* 

  - VIM v8+ or NVIM v0.3.4+ (not tested on lower versions)
  - Python v3.3+ (`:echo has('python3')`, `:!python3 --version`)

==============================================================================
USAGE                                                           *kronos-usage* 
>
  :Kronos
<
------------------------------------------------------------------------------
CREATE                                                         *kronos-create*

To create a task, you can:

 - Write a full table line: `|id|desc|tags|active|due|`
 - Write a Kronos format: <desc> <tags> <due>

A tag should start by a `+`. You can add as many tags as you need.

A due should start by a `:`. There is 3 kinds of due:

  - The absolute due: `:DDMMYY:HHMM`, which correspond to a specific date.

  - The approximative due, which is a non-complete absolute, for eg. `:DD`,
    `::HH`, `:DDM:M`. Kronos will try to find the closest date matching this
    due.

  - The relative due, which is relative to the current date. For eg. `:1y`,
    `:2mo`, `:4h`. Available units: `y, mo, w, d, h, m`.

    Note: unit order should be respected, from the biggest to the smallest.
    `2y4mo24m` is valid, `3m4d` is not.

Here some use cases:

Current date     | Given pattern  | Output
03/03/2019 21:42 | `:4`             | 04/03/2019 00:00
03/03/2019 21:42 | `:2`             | 02/04/2019 00:00
03/03/2019 21:42 | `:0304` or `:034`  | 03/04/2019 00:00
03/03/2019 21:42 | `:3004` or `:304`  | 30/04/2019 00:00
03/03/2019 21:42 | `:0202`          | 02/02/2020 00:00
03/03/2019 21:42 | `:020221`        | 02/02/2021 00:00
03/03/2019 21:42 | `::22`           | 03/03/2019 22:00
03/03/2019 21:42 | `::19`           | 04/03/2019 19:00
03/03/2019 21:42 | `:4:2150`        | 04/03/2019 21:50
03/03/2019 21:42 | `:2d`            | 05/03/2019 21:42
03/03/2019 21:42 | `:1w10m`         | 10/03/2019 21:52
03/03/2019 21:42 | `:1y13mo1h`      | 03/04/2021 22:42

Note: the date format is `DD/MM/YYYY HH:MM`

------------------------------------------------------------------------------
READ                                                             *kronos-read*

To show focused task details, press {K}.

------------------------------------------------------------------------------
UPDATE                                                         *kronos-update*

To update a task, just edit the cell and save.

For the `due` field, you need to use the Kronos due format (`:18`, `:20:1230`,
`2w`...).

------------------------------------------------------------------------------
START-STOP                                                 *kronos-start-stop*

To start/stop a task, press <Enter>.

------------------------------------------------------------------------------
DONE                                                             *kronos-done*

To mark a task as done, delete the line.

------------------------------------------------------------------------------
HIDE DONE TASKS                                       *kronos-hide-done-tasks*

To show/hide done tasks, press {gh} (for `go hide`).

------------------------------------------------------------------------------
CONTEXT                                                       *kronos-context*

The context is a filter over tags. Once setup:

 - You will see only tasks containing at least one tag of your context
 - When you create a task, all tags in your context will be assigned to it

To setup a context, press {gc} (for `go to context`), and type all tags you
want in your context (separated by spaces). Typing an empty context removes
it.

------------------------------------------------------------------------------
SORT                                                             *kronos-sort*

You can sort tasks by pressing {gs} (for ascending) or {gS} (for descending).
The sort depends on the position of the cursor. For eg, if it's in the `ID`
column, it will sort the ids.

Note: once the tasks sorted, the buffer will be considered as modified, no
matter the result.

------------------------------------------------------------------------------
WORKTIME                                                     *kronos-worktime*

The worktime allows you to check how much time you spent on one or many tags,
grouped by day. Press {gw} (for `go to worktime`), and type the tags you want
to calculate the total worktime.

You can also add a beginning date with `>DDMMYY:HHMM` and a ending date with
`<DDMMYY:HHMM`. (they can be absolute dues or approximative dues, but not
relative dues). Here some valid options:

  - `tag1 tag2 >18 <20`: worktime for tag1, tag2 between the 18th and the 20th
    of the current month
  - `tag1 >:10 `: worktime for tag1 starting at 10AM of the current day
  - `tag2 <18:22 `: worktime for tag2 ending at 10PM of the 18th of the current
    month

------------------------------------------------------------------------------
DELETE                                                         *kronos-delete*

To delete a task, delete the line when done tasks are shown.

==============================================================================
BACKEND                                                       *kronos-backend* 

By default, Kronos stores tasks in a file
(`/path/to/vim/pluggins/kronos.vim/.database`). You can define an additionnal
backend (for now, only Taskwarrior is available):
>
  let g:kronos_backend = 'file' | 'taskwarrior'
<
This way, tasks will be synchronized with Taskwarrior. It means you can manage
basic actions with Kronos, and manage advanced ones with Taskwarrior CLI.

Note: the synchronization is only from Kronos to Taskwarrior. To synchronize
from Taskwarrior to Kronos, check the import section below.

==============================================================================
IMPORT                                                         *kronos-import* 

If you want to import your Taskwarrior tasks into Kronos, you can use the
`import.py` script at the root folder of the plugin. Usage:

>
  ./import.py taskwarrior ./path/to/your/backlog.data
<

Note: this will erase the current database

==============================================================================
MAPPINGS                                                     *kronos-mappings* 

Here the default mappings:

Toggle task                 <CR>
Show task infos             {K}
Set context                 {gc}
Sort (asc)                  {gs}
Sort (desc)                 {gS}
Hide/show done tasks        {gh}
Show worktime               {gw}
Jump to the next cell       <C-n> 
Jump to the prev cell       <C-p>
Delete in cell              {dic}
Change in cell              {cic}
Visual in cell              {vic}

You can customize them:
>
  nmap <cr>   <plug>(kronos-toggle)
  nmap K      <plug>(kronos-info)
  nmap gc     <plug>(kronos-context)
  nmap gs     <plug>(kronos-sort-asc)
  nmap gS     <plug>(kronos-sort-desc)
  nmap gh     <plug>(kronos-hide-done)
  nmap gw     <plug>(kronos-worktime)
  nmap <c-n>  <plug>(kronos-next-cell)
  nmap <c-p>  <plug>(kronos-prev-cell)
  nmap dic    <plug>(kronos-delete-in-cell)
  nmap cic    <plug>(kronos-change-in-cell)
  nmap vic    <plug>(kronos-visual-in-cell)
<
==============================================================================
LICENSE                                                       *kronos-license*

MIT License

Copyright (c) 2018-2019 ClÃ©ment DOUIN <soywod@users.noreply.github.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

==============================================================================
CONTRIBUTING                                             *kronos-contributing*

Report any bugs here: https://github.com/soywod/kronos.vim/issues
Feel free to submit pull requests: https://github.com/soywod/kronos.vim/pulls

1) Git commit messages follow the `Angular Convention` {1}, but contain only a
subject.
>
  - Use imperative, present tense: âchangeâ not âchangedâ nor âchangesâ
  - Don't capitalize first letter
  - No dot (.) at the end
<
2) Vim code should be as clean as possible, variables and functions use the
snake case convention. A line should never contain more than 80 characters.

3) Tests should be added for each new functionality. Be sure to run tests
before proposing a pull request (via the script `tests.sh`)

                https://gist.github.com/stephenparish/9941e89d80e2bc58a153 {1}

==============================================================================
CHANGELOG                                                   *kronos-changelog*

  `Jul. 24, 2019` - Add tasks sorting
  `Jul. 23, 2019` - Add option to use Taskwarrior as backend
  `May. 14, 2019` - Add relative due + rewrite datetime part in python3
  `May. 13, 2019` - Add custom mapping
  `May. 12, 2019` - Add script to import tasks from taskwarrior
  `May. 11, 2019` - Remove sync support due to too many complications
  `Dec. 31, 2018` - Worktime is now calculated also per day
  `Dec. 26, 2018` - Refactor interface (Vimwiki like {1})
  `Jul. 05, 2018` - Add context by tags
  `Jun. 25, 2018` - Add ability to mark tasks as undone
  `Jun. 24, 2018` - Add option to show or hide done tasks
  `Jun. 23, 2018` - Init changelog

                                        https://github.com/vimwiki/vimwiki {1}

==============================================================================
CREDITS                                                       *kronos-credits*

  - `Taskwarrior` {1}, a task manager
  - `Timewarrior` {2}, a time manager
  - `vim-taskwarrior` {3}, a `Taskwarrior` wrapper for vim
  - `Vimwiki` {4}

                                                   https://taskwarrior.org {1}
                                  https://taskwarrior.org/docs/timewarrior {2}
                                https://github.com/blindFS/vim-taskwarrior {3}
                                        https://github.com/vimwiki/vimwiki {4}

==============================================================================
vim:tw=78:ts=4:ft=help:norl:
